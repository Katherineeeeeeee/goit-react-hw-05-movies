{"version":3,"file":"static/js/546.fc9abd2a.chunk.js","mappings":"mTAEMA,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,sCAKAC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,wBADN,uBACtBC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAMhBC,EAAS,mCAAG,WAAMC,GAAN,yFACAT,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAEM,MAAAA,KAFW,uBACfF,EADe,EACfA,KADe,kBAIhBA,GAJgB,2CAAH,sDAOTG,EAAgB,mCAAG,WAAMC,GAAN,yFACPX,EAASM,IAAT,iBAAuBK,IADhB,uBACtBJ,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBK,EAAe,mCAAG,WAAMD,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfM,EAAe,mCAAG,WAAMF,GAAN,yFACNX,EAASM,IAAT,iBAAuBK,EAAvB,aADM,uBACrBJ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD,iGC5Bb,SAASO,EAAT,GAA+B,IAAXC,EAAU,EAAVA,OAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,EAAAA,KAAf,SACGJ,GACCA,EAAOK,KAAI,SAAAC,GAAK,OACd,gBAAmBH,UAAWC,EAAAA,EAAAA,KAA9B,WACE,gBACED,UAAWC,EAAAA,EAAAA,IACXG,IAAG,6CAAwCD,EAAME,aACjDC,IAAKH,EAAMI,kBAEb,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMX,GAAYY,GAAE,kBAAaP,EAAMQ,IAAtD,UACE,iBAAMX,UAAWC,EAAAA,EAAAA,MAAjB,SAA2BE,EAAMS,YAP5BT,EAAMQ,GADD,KAcvB,C,kIClBc,SAASE,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACX9B,EAAAA,EAAAA,MACGgC,MAAK,SAAA9B,GAAI,OAAI0B,EAAU1B,EAAK+B,QAAnB,IACTC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQR,GAAW,GACvB,GAAE,KAGD,gCACGD,IAAW,SAACU,EAAA,EAAD,KACZ,eAAIC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,QAA1C,8BACC,SAACjC,EAAA,EAAD,CAAUC,OAAQA,MAGxB,CCxBc,SAASiC,IACtB,OACE,2BACE,SAAC,EAAD,KAGL,C,qBCPD,KAAgB,KAAO,mBAAmB,IAAM,kBAAkB,MAAQ,oBAAoB,KAAO,mBAAmB,KAAO,mB","sources":["Api/api.js","components/List/ListItem.jsx","components/Home/Home.jsx","views/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/List/List.module.css?2bcc"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: 'eda1cd62ac56f17bba5191ebaf4fad10',\n  },\n});\n\n//home page\nexport const getPopularMovies = async () => {\n  const { data } = await instance.get('/trending/movie/week');\n  return data;\n};\n\n//movies page\nexport const getSearch = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query },\n  });\n  return data;\n};\n\nexport const getMovieDetailes = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}`);\n  return data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await instance.get(`/movie/${movieId}/reviews`);\n  return data;\n};\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport s from './List.module.css';\n\nexport default function ListItem({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul className={s.list}>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id} className={s.item}>\n            <img\n              className={s.img}\n              src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              <span className={s.title}>{movie.title}</span>\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nListItem.propTypes = {\n  movies: PropTypes.array,\n  id: PropTypes.number,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { getPopularMovies } from '../../Api/api';\n\nimport ListItem from '../List/ListItem';\nimport Loader from 'components/Loader/Loader';\n\nexport default function List() {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    getPopularMovies()\n      .then(data => setMovies(data.results))\n      .catch(error => console.log(error))\n      .finally(setLoading(false));\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <h2 style={{ textAlign: 'center', margin: '15px' }}>Trending Movies</h2>\n      {<ListItem movies={movies} />}\n    </>\n  );\n}\n\nList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n","import Home from '../components/Home/Home';\n\nexport default function HomePage() {\n  return (\n    <main>\n      <Home />\n    </main>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"List_list__AK7hC\",\"img\":\"List_img__2KN-b\",\"title\":\"List_title__ZjuBo\",\"name\":\"List_name__AFBHu\",\"desc\":\"List_desc__ap3L+\"};"],"names":["instance","axios","baseURL","params","api_key","getPopularMovies","get","data","getSearch","query","getMovieDetailes","movieId","getMovieCredits","getMovieReviews","ListItem","movies","location","useLocation","className","s","map","movie","src","poster_path","alt","original_title","state","from","to","id","title","List","useState","setMovies","loading","setLoading","useEffect","then","results","catch","error","console","log","finally","Loader","style","textAlign","margin","HomePage"],"sourceRoot":""}